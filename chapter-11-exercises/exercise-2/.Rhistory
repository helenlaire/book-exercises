install.packages("dplyr")
library("dplyr")
# Install and load the "fueleconomy" package
#install.packages("devtools")
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
distinct(makes)
# Filter the data set for vehicles manufactured in 1997
cars_1997 <- filter(vehicles, year == "1997")
arrange(cars_1997, -hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars_1997 <- mutate(cars_1997, average = (hwy + cty)/2
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars_1997 <- mutate(cars_1997, average = (hwy + cty)/2)
cars_1997 <- mutate(cars_1997, average = (hwy + cty)/2)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
filter(cars_1997, drive == "2-Wheel Dirve", cty >20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars_1997_2wd <- filter(cars_1997, drive == "2-Wheel Dirve", cty >20)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
filter(cars_1997_2wd, hwy == min(hwy))
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars_1997 <- mutate(cars_1997, average = (hwy + cty)/2)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars_1997_2wd <- filter(cars_1997, drive == "2-Wheel Dirve", cty >20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars_1997_2wd <- filter(cars_1997, drive == "2-Wheel Dirve", cty >20)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
filter(cars_1997_2wd, hwy == min(hwy))
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
select(filter(cars_1997_2wd, hwy == min(hwy)),id)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
distinct(makes)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
length(distinct(makes))
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
nrow((distinct(makes))
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
nrow(distinct(makes))
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
nrow(distinct(vehicles,makes))
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
nrow(distinct(vehicles,make))
# Filter the data set for vehicles manufactured in 1997
cars_1997 <- filter(vehicles, year == 1997)
# Filter the data set for vehicles manufactured in 1997
cars_1997 <- filter(vehicles, year == 1997)
arrange(cars_1997, -hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars_1997 <- mutate(cars_1997, average = (hwy + cty)/2)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars_1997_2wd <- filter(cars_1997, drive == "2-Wheel Dirve", cty >20)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
select(filter(cars_1997_2wd, hwy == min(hwy)),id)
cars_1997 <- arrange(cars_1997, hwy)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars_1997_2wd <- filter(vehicles, drive == "2-Wheel Dirve", cty >20)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
select(filter(cars_1997_2wd, hwy == min(hwy)),id)
View(cars_1997_2wd)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars_1997_2wd <- filter(vehicles, drive == "2-Wheel Drive", cty > 20)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
select(filter(cars_1997_2wd, hwy == min(hwy)),id)
# Exercise 2: working with `dplyr`
# Note that this exercise repeats the analysis from Exercise 1, but should be
# performed using `dplyr` (do not directly access or manipulate the data frames)
# Install and load the "fueleconomy" package
#install.packages("devtools")
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
# Install and load the "dplyr" library
install.packages("dplyr")
library("dplyr")
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
nrow(distinct(vehicles,make))
# Filter the data set for vehicles manufactured in 1997
cars_1997 <- filter(vehicles, year == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
cars_1997 <- arrange(cars_1997, hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars_1997 <- mutate(cars_1997, average = (hwy + cty)/2)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars_1997_2wd <- filter(vehicles, drive == "2-Wheel Drive", cty > 20)
View(cars_1997_2wd)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
select(filter(cars_1997_2wd, hwy == min(hwy)),id)
# Write a function that takes a `year_choice` and a `make_choice` as parameters,
# and returns the vehicle model that gets the most hwy miles/gallon of vehicles
# of that make in that year.
# You'll need to filter more (and do some selecting)!
# What was the most efficient Honda model of 1995?
display_model <- function(make_choice, year_choice){
filter_given_conditions <- filter(vehicles, make == make_choice, year == year_choice)
filter_given_conditions <- filter(filter_given_conditions, hwy == max(hwy))
find_model <- select(filter_given_conditions,model)
find_model
}
# What was the most efficient Honda model of 1995?
display_model("Honda",1995)
display_model <- function(year_choice, make_choice){
get_car <- vehicles[vehicles$year == year_choice & vehicles$make == make_choice,]
model <- get_car[get_car$hwy == max(get_car$hwy),"model"]
model
}
# What was the most efficient Honda model of 1995?
display_model(1995,"Honda")
