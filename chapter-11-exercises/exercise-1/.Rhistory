View(fuelecoonomy)
View(vehicles)
View("vehicles")
# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
View(vehicles)
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
make <- vehicles$make
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
print(make <- vehicles$make)
?unique()
unique(make, incomparables = FALSE)
vehicles$year[vehicles$year == "1997"]
vehicles$year[vehicles$year == "1997",]
vehicles[vehicles$year == "1997",]
length(unique(make, incomparables = FALSE))
?order
View(1997_car)
cars <- vehicles[vehicles$year == "1997",]
View(cars)
cars <- cars[order("hwy"),]
View(cars)
cars <- cars[order(cars$hwy),]
cars <- cars[order(cars$hwy),]
View(cars)
cars <- vehicles[vehicles$year == "1997",]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
cars <- cars[order(cars$hwy),]
View(cars)
install.packages("dplyr")
library("dplyr")
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars$average(mean(cars$cty, cars$hwy))
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars$average <- (mean(cars$cty, cars$hwy))
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars$average <- (cars$cty + cars$hwy)/2
View(cars)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars$average <- mean(cars$cty, cars$hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars$average <- (cars$cty +cars$hwy)/2
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars[cars$cty > 20,]
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
vehicles[vehicles$drive == "2-Wheel Drive"&cars$cty > 20,]
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
vehicles[vehicles$drive == "2-Wheel Drive"&cars$cty > 20,]
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
vehicles[vehicles$drive == "2-Wheel Drive" & vehicles$cty > 20,]
vehicles[vehicles$drive == "2-Wheel Drive" & vehicles$cty > 20,]
View(vehicles)
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
install.packages("devtools")
View(vehicles)
View(vehicles)
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
install.packages("devtools")
wo_wheel_20_miles[two_wheel_20_miles$hwy == min(two_wheel_20_miles$hwy),"id"]
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
two_wheel_20_miles[two_wheel_20_miles$hwy == min(two_wheel_20_miles$hwy),"id"]
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel_20_miles <- vehicles[vehicles$drive == "2-Wheel Drive" & vehicles$cty > 20,]
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
two_wheel_20_miles[two_wheel_20_miles$hwy == min(two_wheel_20_miles$hwy),"id"]
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy <- two_wheel_20_miles$id[two_wheel_20_miles$hwy == min(two_wheel_20_miles$hwy)]
worst_hwy <- two_wheel_20_miles$id[two_wheel_20_miles$hwy == min(two_wheel_20_miles$hwy)]
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
print(worst_hwy <- two_wheel_20_miles$id[two_wheel_20_miles$hwy == min(two_wheel_20_miles$hwy)])
display_model <- function(year_choice, make_choice){
get_car <- vehicles[vehicles$year == year_choice & vehicles$make == make_choice,]
model <- get_car[get_car$hwy == max(get_car$hwy),"model"]
model
}
display_model("Honda",1995)
display_model(1995,"Honda")
