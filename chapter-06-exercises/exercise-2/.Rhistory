# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
?substr
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
substr(lyric, 1, 13)
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro<- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
fruits <- substr(lyric, 15, nchar(lyric)
fruits <- substr(lyric, 15, nchar(lyric))
fruits <- substr (lyric, 15, nchar(lyric))
fruits <- substr (lyric, 15, nchar(lyric))
fruits
intro
?gsub
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", fruits)
fruits_e
fruits_o
fruits_o
fruits_o <- gsub("a", "o", fruits)
fruits_o
lyric_e
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro, fruits_e)
lyric_e
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(paste(intro,fruits_o))
install.packages("stringr")
install.packages("stringr")
library("stringr")
word(lyric_e, 2, 4)
say_hello <- function(name){
greeting <- paste ("hello", name)
print(greeting)
}
say_hello(Claire)
say_hello <- function(name){
greeting <- paste ("hello", name)
print(greeting)
}
say_hello("Claire")
greeting #re
greeting
say_hello("Claire")
